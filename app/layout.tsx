import type { Metadata } from "next";
import { JSXElementConstructor, ReactElement } from "react";
import localFont from "next/font/local";
import flagsmith from 'flagsmith/isomorphic';

import { FlagsmithProviderWrapper } from "@/components/FlagsmithProviderWrapper";
import { ReduxProvider } from "@/components/ReduxProvider";

import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: ReactElement<any, string | JSXElementConstructor<any>>
}>) {

  const flagsmithState = await flagsmith.init({
    environmentID: process.env.FLAGSMITH_ENVIRONMENT_ID,
  }).then(() => flagsmith.getState());

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ReduxProvider>
          <FlagsmithProviderWrapper flagsmithState={flagsmithState}>
            {children}
          </FlagsmithProviderWrapper>
        </ReduxProvider>
      </body>
    </html>
  );
}
